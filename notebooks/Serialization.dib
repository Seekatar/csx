#!csharp

using System.Text.Json;
using static System.Console;
using System.Text.Json.Serialization;

class A
{
    public enum E {
        a,b,c
    }
    public TimeSpan TS { get; set; } = TimeSpan.FromMinutes(5);
    public E E1 = E.b;
    public string DefaultText = "This is default value";
}

var x = JsonSerializer.Serialize(new A(), new JsonSerializerOptions() { Converters =
    {
        new JsonStringEnumConverter(JsonNamingPolicy.CamelCase)
    }});
WriteLine($"{x}");
var a = JsonSerializer.Deserialize<A>(x);
WriteLine($"{JsonSerializer.Serialize(a)}");

x = Newtonsoft.Json.JsonConvert.SerializeObject(new A());
WriteLine($"{x}");
a = Newtonsoft.Json.JsonConvert.DeserializeObject<A>(x);
WriteLine($"{Newtonsoft.Json.JsonConvert.SerializeObject(a)}");

a = Newtonsoft.Json.JsonConvert.DeserializeObject<A>("{\"E1\":\"a\"}");
WriteLine($"{Newtonsoft.Json.JsonConvert.SerializeObject(a)}");

a = Newtonsoft.Json.JsonConvert.DeserializeObject<A>("{\"E1\":\"a\",\"DefaultText\":\"Next\"}");
WriteLine($"{Newtonsoft.Json.JsonConvert.SerializeObject(a)}");
