#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

// calculate age from date of birth
using static System.Console;


Func<DateOnly, int> calcDob = (DateOnly dob) => {
var today = DateOnly.FromDateTime(DateTime.Now);
var age = today.Year - dob.Year;
if (dob > today.AddYears(-age)) age--; // birthday hasn't happened yet
return age;
};

var dob = DateOnly.Parse("1961-01-1");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1961-12-1");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1939-08-22");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1943-12-28");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1952-04-04");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1957-04-21");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1970-01-27");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("2003-06-25");
WriteLine($"{dob}, {calcDob(dob)}");
dob = DateOnly.Parse("1998-08-04");
WriteLine($"{dob}, {calcDob(dob)}");

#!csharp

// calculate date for people over an age
using static System.Console;

Func<int, DateOnly> calcDate = (int age) => {
var today = DateOnly.FromDateTime(DateTime.Now);
return today.AddYears(-age);
};

WriteLine($"{calcDate(60)}");
WriteLine($"{calcDate(61)}");
WriteLine($"{calcDate(62)}");
WriteLine($"{calcDate(63)}");
